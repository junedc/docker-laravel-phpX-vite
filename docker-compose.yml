services:
  php83:
    build:
      context: ./docker/php83
    container_name: php83
    working_dir: /var/www
    volumes:
      - ../playground:/var/www/playground
      - ../cruzes:/var/www/cruzes
      - ~/.composer/cache:/tmp/composer
    environment:
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
      XDEBUG_START_WITH_REQUEST: "${XDEBUG_START_WITH_REQUEST:-no}"
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: "1"
      COMPOSER_MEMORY_LIMIT: "-1"
    ports:
      - "9003:9003"
    networks: [ stack ]

  php74:
    build:
      context: ./docker/php74
    container_name: php74
    working_dir: /var/www
    volumes:
      - ../php74:/var/www/php74
    environment:
      XDEBUG_MODE: "${XDEBUG_MODE:-off}"
      XDEBUG_START_WITH_REQUEST: "${XDEBUG_START_WITH_REQUEST:-no}"
    ports:
      - "9005:9005"
    networks: [ stack ]

  nginx:
    image: nginx:alpine
    container_name: web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../playground:/var/www/playground
      - ../cruzes:/var/www/cruzes
      - ../php74:/var/www/php74
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/certs:/etc/nginx/certs:ro
    depends_on:
      - php83
      - php74
      - viteme
    networks: [ stack ]

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: playground
      MYSQL_USER: forge
      MYSQL_PASSWORD: secret
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks: [ stack ]

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks: [ stack ]

  meilisearch:
    image: getmeili/meilisearch:v1.6
    container_name: meilisearch
    environment:
      MEILI_MASTER_KEY: masterKey
    ports:
      - "7700:7700"
    networks: [ stack ]

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "8025:8025"
      - "1025:1025"
    networks: [ stack ]

  viteme:
    image: node:20-alpine
    container_name: viteme
    working_dir: /app
    volumes:
      - ../viteme:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    expose:
      - "5173"
    ports:
      - "5173:5173"
    networks: [ stack ]

networks:
  stack:
    driver: bridge

volumes:
  mysql-data:
